<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Watch Lobby</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="style.css">
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <style type="text/css">

    </style>
</head>
<body>
<div class="nav-container" id="navbar-container">
  <nav id="nav-bar" class="center-initial-nav">
    <!-- <h2 style="color: #000;text-align: center;">Watch Lobby</h2> -->
    <form id='form'>
      <input placeholder="Enter Video Id" id="video">
      <button type="submit" id="btn-vid" onclick="myFunction1()"><img src="search.svg" alt="Search"></button>
    </form>
  </nav>
</div>

  <div class="hide-initially">
    <div id="player-container">
      <div id="player"></div>
    </div><br>
    <div class="slidecontainer">
      <input type="range" min="0" max="100" value="0" class="slider" id="myRange">
    </div>
    <br>
    <div id="btn-container">
      <button id="play"><img src="play.svg" alt="Play"></button>
      <button id="pause"><img src="pause.svg" alt="Pause"></button>
      <button id="mute"><img src="mute.svg" alt="Mute"></button>
      <button id="sync"><img src="sync.svg" alt="Sync"></button>
    </div>
  </div>

  <script>
  $(document).ready(function(){
      $("#btn-vid").click(function(){

           // $("#nav-bar").animate({height: "300px"});
           $("#nav-bar").animate({
              
            }, 1200, function() {
              // $("#navbar-container").removeClass("nav-container").addClass("nav-transition");
              $("#navbar-container").addClass("nav-transition");
              // $(".hide-initially").css("display", "block");
              $(".hide-initially").addClass("no-hide");
            });
      });
  });
  </script>

<script>
    var tag = document.createElement('script');
    const socket = io('https://watchlobby.herokuapp.com');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    function onYouTubeIframeAPIReady() {

    }
    var player;
    var curVid;

    document.getElementById('form').addEventListener('submit',function(e){
        e.preventDefault();
        if(player==undefined){
            player = new YT.Player('player', {
                height: '390',
                width: '640',
                playerVars:{
                    'controls':0,
                    'autoplay':0
                },
                videoId: document.getElementById('video').value,
                events: {
                    'onStateChange': onPlayerStateChange
                }
            });
            curVid=document.getElementById('video').value;
        }
        else{
            console.log(20000000);
            socket.emit('newvideo',{
                video:document.getElementById('video').value,
                id:socket.io.engine.id
            });
        }
    });
    socket.on('newvideo2',function(data){
        console.log('Changing')
        player.loadVideoById({videoId:data.video});
        curVid=data.video;
    });
    var done = false;
    function onPlayerStateChange(event) {
        if(event.data==3){

        }
        else if(event.data==1){
            timer=setInterval(update,500);
        }
        else if(event.data==2){
            document.getElementById('play').style.backgroundColor="#fff";
            document.getElementById('pause').style.backgroundColor="rgb(255,20,20)";
            clearInterval(timer);
        }
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    function update(){
        nt=player.getCurrentTime();
        tot=player.getDuration();
        if(nt/tot!=NaN){
            document.getElementById('myRange').value=nt/tot*100;
        }
        else{
            document.getElementById('myRange').value=0;
        }
    }
    document.getElementById('myRange').addEventListener('mousedown',function(){
        clearInterval(timer);
    });
    document.getElementById('myRange').addEventListener('mouseup',function(){
        socket.emit('time',{
            time:document.getElementById('myRange').value*player.getDuration()/100,
            id:socket.io.engine.id
        });
        timer=setInterval(update,500);
    });
    document.getElementById('myRange').addEventListener('touchstart',function(){
        clearInterval(timer);
    });
    document.getElementById('myRange').addEventListener('touchend',function(){
        socket.emit('time',{
            time:document.getElementById('myRange').value*player.getDuration()/100,
            id:socket.io.engine.id
        });
        timer=setInterval(update,500);
    });
    document.getElementById('myRange').addEventListener('dragstart',function(){
        clearInterval(timer);
    });
    document.getElementById('myRange').addEventListener('dragend',function(){
        socket.emit('time',{
            time:document.getElementById('myRange').value*player.getDuration()/100,
            id:socket.io.engine.id
        });
        timer=setInterval(update,500);
    });
    socket.on('time',function(data){
        console.log('TIME CHANGE')
        player.seekTo(data.time);
        player.pauseVideo();
        document.getElementById('play').style.backgroundColor="#fff";
        document.getElementById('pause').style.backgroundColor="rgb(255,20,20)";
    })
    document.getElementById('play').addEventListener('click',function(){
        socket.emit('change',{
            type:1,
            pos:player.getCurrentTime(),
            id:socket.io.engine.id
        })
    })
    document.getElementById('mute').addEventListener('click',function(){
        socket.emit('mute',{
            id:socket.io.engine.id
        })
    })
    socket.on('mute',function(data){
        if(player.isMuted()){
            player.unMute();
            document.getElementById('mute').style.backgroundColor="#fff";
        } else{
            player.mute();
            // document.getElementById('mute').style.backgroundColor="#991f00";
            document.getElementById('mute').style.backgroundColor="rgb(255,20,20)";
        }
    })
    document.getElementById('pause').addEventListener('click',function(){
        socket.emit('change',{
            type:2,
            pos:player.getCurrentTime(),
            id:socket.io.engine.id
        })
    })
    document.getElementById('sync').addEventListener('click',function(){
        socket.emit('get',{
            id:socket.io.engine.id
        })
    });
    socket.on('change',function(data){
        console.log(data);
        if(data.type===1){
            player.seekTo(data.pos);
            player.playVideo();
            document.getElementById('pause').style.backgroundColor="#fff";
            document.getElementById('play').style.backgroundColor="rgb(255,20,20)";
        } else if(data.type==2){
            clearInterval(timer);
            player.pauseVideo();
            document.getElementById('play').style.backgroundColor="#fff";
            document.getElementById('pause').style.backgroundColor="rgb(255,20,20)";
        } else if(data.type===3){

        }
    })
    socket.on('errormessage',function(data){
        if(socket.id==data.id){
            alert('Youre not the host. Only host can change.')
        }
    })
    socket.on('get',function(data){
        socket.emit('sync',{
                pos:player.getCurrentTime(),
                state:player.getPlayerState(),
                id:socket.io.engine.id,
                video:curVid
            });
    });
    socket.on('sync',function(data){
        console.log(data)
        if(curVid!=data.video){
            player.loadVideoById(data.video);
            curVid=data.video;
        }
        player.seekTo(data.pos);
        if(data.state==1){
            player.playVideo();
            document.getElementById('pause').style.backgroundColor="#fff";
            document.getElementById('play').style.backgroundColor="rgb(255,20,20)";
        } else if(data.state==2){
            player.pauseVideo();
            document.getElementById('play').style.backgroundColor="#fff";
            document.getElementById('pause').style.backgroundColor="rgb(255,20,20)";
        }
    });
    function stopVideo() {
        player.stopVideo();
    }
</script>

</body>
</html>
