<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Page Title</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <div id="player"></div>
    <button id="play">Play</button>
    <button id="pause">Pause</button>
    <button id="sync">Sync</button>
    <form id='form'>
        <input placeholder="Video Id" id="video">
        <input type="submit">
    </form>
<script>
    var tag = document.createElement('script');
    const socket = io('http://localhost:4040');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '390',
            width: '640',
            playerVars:{
            //     'controls':0,
                'autoplay':0
            },
            videoId: 'M7lc1UVf-VE',
            events: {
                'onStateChange': onPlayerStateChange
            }
        });
    }
    document.getElementById('form').addEventListener('submit',function(e){
        e.preventDefault();
        socket.emit('newvideo',{
            video:document.getElementById('video').value,
            id:socket.io.engine.id
        })
    });
    socket.on('newvideo2',function(data){
        console.log('Changing')
        player.loadVideoById({videoId:data.video});
    });
    var done = false;
    function onPlayerStateChange(event) {
        if(event.data==3){
            socket.emit('wait',{
                pos:player.getCurrentTime(),
                id:socket.io.engine.id
            })
        }
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    document.getElementById('play').addEventListener('click',function(){
        player.playVideo();
        socket.emit('change',{
            type:1,
            pos:player.getCurrentTime(),  
            id:socket.io.engine.id
        })
    })
    document.getElementById('pause').addEventListener('click',function(){
        player.pauseVideo();
        socket.emit('change',{
            type:2,
            pos:player.getCurrentTime(),  
            id:socket.io.engine.id
        })
    })
    document.getElementById('sync').addEventListener('click',function(){
        socket.emit('get',{
            id:socket.io.engine.id
        })
    });
    socket.on('change',function(data){
        console.log(data);
        if(data.type===1){
            player.seekTo(data.pos);
            player.playVideo();
        } else if(data.type==2){
            player.seekTo(data.pos);
            player.pauseVideo();     
        } else if(data.type===3){
             
        }
    })
    socket.on('errormessage',function(data){
        if(socket.id==data.id){
            alert('Youre not the host. Only host can change.')
        }
    })
    socket.on('get',function(data){
        socket.emit('sync',{
                pos:player.getCurrentTime(),
                state:player.getPlayerState(),
                id:socket.io.engine.id,
            });
    });
    socket.on('sync',function(data){
        console.log(data)
        player.seekTo(data.pos);
        if(data.state==1){
            player.playVideo();
        } else if(data.state==2){
            player.pauseVideo();
        }  
    });
    function stopVideo() {
        player.stopVideo();
    }
</script>

</body>
</html>